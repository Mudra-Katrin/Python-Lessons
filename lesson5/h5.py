# # 41)Напишите программу на Python для поиска пересечения двух заданных массивов с помощью Lambda, filter.
# [1, 2, 3, 5, 7, 8, 9, 10]
# [1, 2, 4, 8, 9]


# 42)Имеется упорядоченный список:

# A = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

# Перебрать все элементы этого списка с помощью функций enumerate и элементы, 
# стоящие на главной диагонали (имеющие равные индексы со списком и индексом
# элемента внутри списка), превратить в нули.

# 43)Имеется список id сотрудников из 10 элементов, каждый id - случайное число от 1 до 100 (сделать с помощью list_comprehension)
# Имеется список имен сотрудников из 10 элементов (вручную)

# Сопоставьте каждому имени сотрудника его id по порядку, и выведите получившийся список кортежей.
# Отсортировать список по возрастанию id.

# Выведете имена сотрудников, получившие нечетное id.

# Решить с помощью zip,filter,lambda
# От Артур всем 07:35 PM
# [[1,2,3]
#  [4,5,6]
#  [7,8,9]]
# 41)Напишите программу на Python для поиска пересечения двух заданных массивов с помощью Lambda, 
# 43)Имеется список id сотрудников из 10 элементов, каждый id - случайное число от 1 до 100 (сделать с помощью list_comprehension)
# Имеется список имен сотрудников из 10 элементов (вручную)

# Сопоставьте каждому имени сотрудника его id по порядку, и выведите получившийся список кортежей.
# Отсортировать список по возрастанию id.

# Выведете имена сотрудников, получившие нечетное id.

# Решить с помощью zip,filter,lambda

# список id
id = [random.randint(1,100) for i in range(10)]
# print(id)

users = ['user1','user2','user3','user4','user5','user6','user7','user8','user9','user10']

res = list(zip(id,users))
# print(res)
    
res = sorted(res, key = lambda x: x[0])
# print(res)

result = list(filter(lambda x: not x[0]%2==0, res))
print(result)
for el in result:
    print(el[1], end = ' ')
    
 #41)Напишите программу на Python для поиска пересечения двух
# заданных массивов с помощью Lambda, filter.

# a1 = [1, 2, 3, 5, 7, 8, 9, 10]
# a2 = [1, 2, 4, 8, 9]
#
# res = list(filter(lambda x: x in a1,a2))
# print(res)

#2)Имеется упорядоченный список:

# A = [[1, 2, 3],
#      [4, 5, 6],
#      [7, 8, 9]]
# #
# # Перебрать все элементы этого списка с помощью функций enumerate и элементы, стоящие на главной диагонали (имеющие равные индексы со списком и индексом элемента внутри списка), превратить в нули.
#
# for indx,value in enumerate(A):
#     value[indx] = 0
# print(A)

#seminar5tasks
43)Имеется список id сотрудников из 10 элементов, каждый id - случайное число от 1 до 100 (сделать с помощью list_comprehension)
# Имеется список имен сотрудников из 10 элементов (вручную)
#
# Сопоставьте каждому имени сотрудника его id по порядку, и выведите получившийся список кортежей.
# Отсортировать список по возрастанию id.
#
# Выведете имена сотрудников, получившие нечетное id.
#
# Решить с помощью zip,filter,lambda
# import random
# id = random.sample(range(0,100), 10)
# print(id)
#
# name = ["s1","s2","s3","s4","s5","s6","s7","s8","s9","s10",]
#
# res = list(zip(id,name))
# print(res)
#
# res = sorted(res)
# print(res)
#
# odd_list = list(filter(lambda x: x[0]%2==1,res))
# print(odd_list)
# names_list = list(map(lambda x:x[1],odd_list))
# print(names_list)
